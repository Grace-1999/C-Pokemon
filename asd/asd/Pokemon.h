#pragma once
#include "Basic.h"
#include "Random.h"

class Skill
{
private:
	string skillname;
	string skilltype;
	int power;
	int maxpp, pp;
	int accuracy;
	string description;
public:
	Skill(string _name, string _type, int _power, int _accuracy = 100, int _pp = 10, string _desc = "")
		: skillname(_name), skilltype(_type), power(_power), accuracy(_accuracy), pp(_pp), maxpp(_pp), description(_desc) {
	}

	string GetName() const { return skillname; }
	string GetType() const { return skilltype; }
	int GetPower() const { return power; }
	int GetAccuracy() const { return accuracy; }
	int GetPP() const { return pp; }
	int GetMaxPP() const { return maxpp; }
	string GetDescription() const { return description; }

	bool Use()
	{
		if (pp > 0)
		{
			pp--;
			return true;
		}
		return false;
	}

	void RestorePP(int amount)
	{
		pp = amount + pp;
	}

	void FullRestorePP()
	{
		pp = maxpp;
	}
};

class Pokemon
{
private:
	Random ran;
	vector<Skill> skills;
	
public:
	vector<string>Have_Skill;
	string Pokemon_Name = "";
	string Type = "";
	int Pokemon_Level = 0;
	int MaxHp = 0, Atk = 0, Def = 0;
	int CurrentHp = 0;

	//종족값
	int baseHp = 0;
	int baseAtk = 0;
	int baseDef = 0;

	//성장률
	float hpGrowth = 0.f;
	float atkGrowth = 0.f;  
	float defGrowth = 0.f;

	string MirrorLine(const std::string& line, const std::unordered_map<char, char>& mirror_map) {
		string result = line;
		reverse(result.begin(), result.end());
		for (char& c : result) {
			auto it = mirror_map.find(c);
			if (it != mirror_map.end()) {
				c = it->second;
			}
		}
		return result;
	}

	void printP()
	{
		std::vector<std::string> ascii_art = {
			"                  ,#.                                                 ",
			"                 /###                                                 ",
			"                 |####|                                               ",
			"                 |     |                                   _, .+      ",
			"                 |      \\                              ,,-###'       ",
			"                 |      '.                         ,-'' #####'        ",
			"                 |       |  ____             .'      #####_'          ",
			"                  | _.  -'''    `''--..._    ,'        ,-'            ",
			"                  ;'                     `,-'       ,-'               ",
			"                 /                              _.-'           .__    ",
			"                .    ,--.                        ,|      _..--''    | ",
			"     ,.<<'-|_        |#|         ,--.       |,.,-''            /      ",
			"     ':      `/  ````             L#|      /                /         ",
			"      \\     .'''\\    -._,.-.._      ```'      .'              /     ",
			"       \\     \\'/'     \\*      `;''   ,-''-.   |              _/    ",
			"        \\     `-.      \\      /      |''''|  /        __,,--'       ",
			"         \\       `-.    \\   ,'       `''''' /   _,,--'              ",
			"          `.        `-.  `''           _.--|\\   `.                   ",
			"            \\   ,               ,-    '  ,=\\ `,   \\                ",
			"             `.,'             ,'            \\ _,,.,-                 ",
			"            _,'             ,'          ,:..|:_                       ",
			"   .--  ,-''  ``._         /          ,_.----,-'                      ",
			"   '. `'                  ,        ,-'        `,- '                   ",
			"    `.                   :._    ,-'          <'  /                    ",
			"     `.                   '-'<'-                /                     ",
			"       `.                                     ,'                      ",
			"         `'''''''''''''''' --------'''''''''--                        "
		};

		std::unordered_map<char, char> mirror_map = {
			{'/', '\\'}, {'\\', '/'}, {'(', ')'}, {')', '('},
			{'{', '}'}, {'}', '{'},   {'[', ']'}, {']', '['},
			{'<', '>'}, {'>', '<'}
		};
		for (const auto& line : ascii_art) {
			std::cout << MirrorLine(line, mirror_map) << std::endl;
		}
	}

	int CalculateStat(int baseValue, int level, float growthRate = 1.0f)
	{
		return static_cast<int>(baseValue + (baseValue * growthRate * level / 20));
	}

	virtual void WildShowText() {};
	virtual void PlayerShowText() {};

	void AddSkill(const Skill& skill)
	{
		if (skills.size() < 4)
		{
			skills.push_back(skill);
		}
	}

	void ShowSkills() {
		
		for (int i = 0; i < skills.size(); i++) {
			cout << i + 1 << ". " << skills[i].GetName()
				<< " (타입: " << skills[i].GetType()
				<< ", 위력: " << skills[i].GetPower()
				<< ", PP: " << skills[i].GetPP() << "/" << skills[i].GetMaxPP()
				<< ", 명중률: " << skills[i].GetAccuracy() << "%)" << endl;
		}
		
	}

	vector<Skill>& GetSkills()
	{
		return skills;
	}
};



class Pikachu : public Pokemon
{
public:

	Pikachu(int level)
	{
		Pokemon_Name = "피카츄";
		Type = "electric";
		Pokemon_Level = level;
		//=======================
        baseHp = 45;  
        baseAtk = 55;
        baseDef = 40;
        hpGrowth = 1.1f;  
        atkGrowth = 1.15f; 
        defGrowth = 1.0f;  
        //========================
        MaxHp = CalculateStat(baseHp, level, hpGrowth);
        CurrentHp = MaxHp;
        Atk = baseAtk + CalculateStat(baseAtk, level, atkGrowth);
        Def = baseDef + CalculateStat(baseDef, level, defGrowth);

        //            skillname, skilltype, power,accuracy, maxpp, description
        AddSkill(Skill("몸통박치기", "normal", 40, 100, 35, "상대에게 몸을 부딪칩니다."));
        AddSkill(Skill("전광석화", "normal", 60, 90, 20, "빠른 속도로 공격합니다."));
        AddSkill(Skill("10만볼트", "electric", 90, 75, 15, "강력한 전기 공격을 가합니다."));
        AddSkill(Skill("번개", "electric", 120, 70, 5, "매우 강력한 번개로 공격합니다."));
	}

	void Wild_Pikachu_text()
	{
		cout << "\033[1;33m";
		cout << R"(
           ###                                              
          #####                                             
         ######                                             
        ###-.-+                                        +-+  
        #+...-+                      #########       -...-- 
       +-....-#                ++-..-########     #-......+ 
       --....-             +-.......#######     +-........- 
       +-...-------+++  +-.........+#####     +-..........-+
       +-..............-..........+###       +.............+
      +-........-.-+.......-.---+#         +-..............-
     +-.........+###.......-#            +-................-
    ++#+-............---....-#          --...............-+ 
    +--...----+....-----+....-         +.............--+    
   ++-....-++++-...------....-+        +...........-#       
    +--....-+++-....+---......-#        +.......-#          
     ++-....---................-#        +----+             
       +-...............-.--....-#        +--+              
    #+.................--.--....-++     #-----+             
#+-....................-.---......--  +------+#             
---.....................-...........+#+---++                
#..---...............................+##+--+                
       #++++-........................-+##++++#              
           #-.........................-+++++##              
            +.........................--++                  
            +.........................--+++                 
            +........................---#                   
             -..........--.......-------+                   
              --...-------+------------+                    
               +++---+++      +++--+---+                    
                  #---             #---+                    
                   #++              #+-+
					)";
		cout << "\033[0m" << endl;

	}

	void WildShowText() override
	{
		Wild_Pikachu_text();
	}

	void Player_Pikachu_text()
	{
		cout << "\033[1;33m";
		cout << R"(
           ###                                              
          #####                                             
         ######                                             
        ###-.-+                                        +-+  
        #+...-+                      #########       -...-- 
       +-....-#                ++-..-########     #-......+ 
       --....-             +-.......#######     +-........- 
       +-...-------+++  +-.........+#####     +-..........-+
       +-..............-..........+###       +.............+
      +-........-.-+.......-.---+#         +-..............-
     +-.........+###.......-#            +-................-
    ++#+-............---....-#          --...............-+ 
    +--...----+....-----+....-         +.............--+    
   ++-....-++++-...------....-+        +...........-#       
    +--....-+++-....+---......-#        +.......-#          
     ++-....---................-#        +----+             
       +-...............-.--....-#        +--+              
    #+.................--.--....-++     #-----+             
#+-....................-.---......--  +------+#             
---.....................-...........+#+---++                
#..---...............................+##+--+                
       #++++-........................-+##++++#              
           #-.........................-+++++##              
            +.........................--++                  
            +.........................--+++                 
            +........................---#                   
             -..........--.......-------+                   
              --...-------+------------+                    
               +++---+++      +++--+---+                    
                  #---             #---+                    
                   #++              #+-+      
					)";
		cout << "\033[0m" << endl;

	}
	void PlayerShowText() override
	{
		Player_Pikachu_text();
	}
};

class Dugtrio : public Pokemon
{
public:
	Dugtrio(int level)
	{
		Pokemon_Name = "두트리오";
		Type = "ground";
		Pokemon_Level = level;
		//=======================
        baseHp = 40;  // 체력 조정
        baseAtk = 75;  // 공격력 조정
        baseDef = 50;
        hpGrowth = 1.0f;  // 체력 성장률 조정
        atkGrowth = 1.2f;  // 공격 성장률 조정
        defGrowth = 1.1f;  // 방어 성장률 상향
        //========================
        MaxHp = CalculateStat(baseHp, level, hpGrowth);
        CurrentHp = MaxHp;
        Atk = baseAtk + CalculateStat(baseAtk, level, atkGrowth);
        Def = baseDef + CalculateStat(baseDef, level, defGrowth);
        //            skillname, skilltype, power,accuracy, maxpp, description
        AddSkill(Skill("몸통박치기", "normal", 40, 100, 35, "상대에게 몸을 부딪칩니다."));
        AddSkill(Skill("흙쏟기", "ground", 60, 95, 25, "흙을 쏟아부어 공격합니다."));
        AddSkill(Skill("지진", "ground", 100, 75, 10, "강력한 지진으로 공격합니다."));
        AddSkill(Skill("대지의힘", "ground", 90, 80, 10, "대지의 힘을 빌려 공격합니다."));
	}
	void Wild_Dugtrio_text()
	{
		cout << "\033[38;5;130m";
		cout << R"(
                                  ######                    
                              +-----------+#                
                            +---------------+#              
                          +-----#+-----++-----#             
                         #------+------#+------#            
                         +------------++-------+#           
                         +------+-...---+-------#           
                         +-------#+----++-------#           
              #++------+++----------------------#           
            +--------------+-----------------+++#           
          +------------------+++---------++++++#            
         +---------+-----+----+++++++++++++++++#            
        #---------##----++----+++++++++++++-+++#            
        +-------------++------++++++++------------#         
        +-----------.....-+----#++++-----+----------#       
        +---------+-------++---#+++----+#------------#      
        +-----------+++++++----++#-----++----+#+-----+#     
        +----------------------+++----++-++--#+-------#     
        +----------------------++----+-....-+---------+     
        +----------------------+------++-----+--------#     
        +----------------------+--------+++++--------+#     
        #----------------------+---------------------#      
        #----------------------+---------------------#      
        #+---------------------+--------------------#       
        #+---------------------+++----++++---------++#      
     #---++----+-------++++----++++++++++++++---+++++-+     
  #++----.-----++++--------+++++---+++++++++++++----+-#     
 +-----+-..---++++++++---++++++-------+-+++++++++++-++-#    
#--------++++--++++++-+++++++++---------++-+++++++++++++++# 
+----------+#-+-------+++++++++++---------+--++++++++#-+++++
     ##++++++++++----++++++++-------------+----+++###+++--+#
               #########   ##----++++###++-----##           
            )";
		cout << "\033[0m" << endl;
	}
	void WildShowText() override
	{
		Wild_Dugtrio_text();
	}
	void Player_Dugtrio_text()
	{
		cout << "\033[38;5;130m";
		cout << R"(
                                  ######                    
                              +-----------+#                
                            +---------------+#              
                          +-----#+-----++-----#             
                         #------+------#+------#            
                         +------------++-------+#           
                         +------+-...---+-------#           
                         +-------#+----++-------#           
              #++------+++----------------------#           
            +--------------+-----------------+++#           
          +------------------+++---------++++++#            
         +---------+-----+----+++++++++++++++++#            
        #---------##----++----+++++++++++++-+++#            
        +-------------++------++++++++------------#         
        +-----------.....-+----#++++-----+----------#       
        +---------+-------++---#+++----+#------------#      
        +-----------+++++++----++#-----++----+#+-----+#     
        +----------------------+++----++-++--#+-------#     
        +----------------------++----+-....-+---------+     
        +----------------------+------++-----+--------#     
        +----------------------+--------+++++--------+#     
        #----------------------+---------------------#      
        #----------------------+---------------------#      
        #+---------------------+--------------------#       
        #+---------------------+++----++++---------++#      
     #---++----+-------++++----++++++++++++++---+++++-+     
  #++----.-----++++--------+++++---+++++++++++++----+-#     
 +-----+-..---++++++++---++++++-------+-+++++++++++-++-#    
#--------++++--++++++-+++++++++---------++-+++++++++++++++# 
+----------+#-+-------+++++++++++---------+--++++++++#-+++++
     ##++++++++++----++++++++-------------+----+++###+++--+#
               #########   ##----++++###++-----##           
)";
		cout << "\033[0m" << endl;
	}
	void PlayerShowText() override
	{
		Player_Dugtrio_text();
	}
};

class Bulbasaur : public Pokemon
{
public:
	Bulbasaur(int level)
	{
		Pokemon_Name = "이상해씨";
		Type = "grass";
		Pokemon_Level = level;
		//=======================
        baseHp = 50;  // 체력 강화
        baseAtk = 49;
        baseDef = 49;
        hpGrowth = 1.15f;  // 체력 성장률 조정
        atkGrowth = 1.05f;  // 공격 성장률 조정
        defGrowth = 1.1f;
        //========================
        MaxHp = CalculateStat(baseHp, level, hpGrowth);
        CurrentHp = MaxHp;
        Atk = baseAtk + CalculateStat(baseAtk, level, atkGrowth);
        Def = baseDef + CalculateStat(baseDef, level, defGrowth);
        //            skillname, skilltype, power, accuracy, maxpp, description
        AddSkill(Skill("몸통박치기", "normal", 40, 100, 35, "상대에게 몸을 부딪칩니다."));
        AddSkill(Skill("덩굴채찍", "grass", 45, 100, 25, "덩굴로 상대를 채찍질합니다."));
        AddSkill(Skill("잎날가르기", "grass", 55, 95, 25, "날카로운 잎으로 공격합니다."));
        AddSkill(Skill("솔라빔", "grass", 100, 80, 10, "태양 에너지를 모아 발사합니다."));
	}
	void Wild_Bulbasaur_text()
	{
		cout << "\033[1;32m";
		cout << R"(                                                                
                                                  +#   #        
                                                #+--#+-+#       
                                            ##+--------#+-#     
                            ##+------------------+-----+-#      
                         #+--------------++-----------+-+#      
                       ##-----------+-----------------+-+#      
        +-++##        #+-----------+------------------+--#      
       ------++-----------+++-++-..-------------------+---#     
      +---............-------...------+----------------+---#    
     #-+.........-++++++--------------------------------+---#   
     #-......-+--++++++----------------+----------------++---#  
    +---.....-++++++-------------------+-----------------+----# 
   +.-----++----------------------------#----------------++---+ 
  +-.-+-+-++----------------+++#--------+-+---------------+----#
 +-.--+---------++------.--.---++-------+---+------------------+
 +-.+---------++++-----.-+..+--.++------+---+++----------------+
+-..+----------+++-------. .++. -++------+-+++++#+-----++------+
+-..+--------------------. .+++.+++---------+++++++#++---------#
+--++++-..---------------  .#+----+----------++++++++++-------+#
++------..--------------+---------------------+++++++--+-----## 
#+-++----.-----------------------++---------------------++++#   
  ##--++++---------------++++-#-------+------------------+#     
     #+--+++-----------++++++-----------------------------+#    
       #-+---#+--------+#--------++-----------------++-----#    
       #----+++-----------+++++-++------------++--++++------#   
       #-----+----+--------+-+--+----+-+------+-+--++++-----#   
        #-+--+-----++-----++---+-++-----------+--++++++-----#   
         +---++-------+#+----++#---+---------#-----++++-----#   
         #+--+--------#   ++++#+---+--------++-------------+#   
          #----------#     #+-#++++--------# #+------------#    
           #++-----+#         -----------+#    +----------#     
          ##++#+-##          #---------+#      #-#+.#+.++#      
                                #-##-#                          
            )";
		cout << "\033[0m" << endl;
	}
	void WildShowText() override
	{
		Wild_Bulbasaur_text();
	}
	void Player_Bulbasaur_text()
	{
		cout << "\033[1;32m";
		cout << R"(                                                                
                                                  +#   #        
                                                #+--#+-+#       
                                            ##+--------#+-#     
                            ##+------------------+-----+-#      
                         #+--------------++-----------+-+#      
                       ##-----------+-----------------+-+#      
        +-++##        #+-----------+------------------+--#      
       ------++-----------+++-++-..-------------------+---#     
      +---............-------...------+----------------+---#    
     #-+.........-++++++--------------------------------+---#   
     #-......-+--++++++----------------+----------------++---#  
    +---.....-++++++-------------------+-----------------+----# 
   +.-----++----------------------------#----------------++---+ 
  +-.-+-+-++----------------+++#--------+-+---------------+----#
 +-.--+---------++------.--.---++-------+---+------------------+
 +-.+---------++++-----.-+..+--.++------+---+++----------------+
+-..+----------+++-------. .++. -++------+-+++++#+-----++------+
+-..+--------------------. .+++.+++---------+++++++#++---------#
+--++++-..---------------  .#+----+----------++++++++++-------+#
++------..--------------+---------------------+++++++--+-----## 
#+-++----.-----------------------++---------------------++++#   
  ##--++++---------------++++-#-------+------------------+#     
     #+--+++-----------++++++-----------------------------+#    
       #-+---#+--------+#--------++-----------------++-----#    
       #----+++-----------+++++-++------------++--++++------#   
       #-----+----+--------+-+--+----+-+------+-+--++++-----#   
        #-+--+-----++-----++---+-++-----------+--++++++-----#   
         +---++-------+#+----++#---+---------#-----++++-----#   
         #+--+--------#   ++++#+---+--------++-------------+#   
          #----------#     #+-#++++--------# #+------------#    
           #++-----+#         -----------+#    +----------#     
          ##++#+-##          #---------+#      #-#+.#+.++#      
                                #-##-#                          
)";
		cout << "\033[0m" << endl;
	}
	void PlayerShowText() override
	{
		Player_Bulbasaur_text();
	}
};

class Charmander : public Pokemon
{
public:
	Charmander(int level)
	{
		Pokemon_Name = "파이리";
		Type = "fire";
		Pokemon_Level = level;
		//=======================
        baseHp = 45;  // 체력 상향
        baseAtk = 55;  // 공격력 상향
        baseDef = 43;
        hpGrowth = 1.05f;  // 체력 성장률 조정
        atkGrowth = 1.15f;  // 공격 성장률 조정
        defGrowth = 1.0f;  // 방어 성장률 상향
		//========================
		MaxHp = CalculateStat(baseHp, level, hpGrowth);
		CurrentHp = MaxHp;
		Atk = baseAtk + CalculateStat(baseAtk, level, atkGrowth);
		Def = baseDef + CalculateStat(baseDef, level, defGrowth);
		//            skillname, skilltype, power, accuracy, maxpp, description
		AddSkill(Skill("할퀴기", "normal", 40, 100, 35, "날카로운 발톱으로 할퀴어 공격합니다."));
		AddSkill(Skill("불꽃세례", "fire", 40, 100, 25, "약한 화염을 내뿜어 공격합니다."));
		AddSkill(Skill("화염방사", "fire", 90, 85, 15, "강한 화염을 내뿜어 공격합니다."));
		AddSkill(Skill("불대문자", "fire", 110, 80, 5, "불로 된 문자로 공격합니다."));
	}
	void Wild_Charmander_text()
	{
		cout << "\033[1;31m";
		cout << R"(
                  ......                                      
               .----------.                                   
             ---------------.                                 
            .-----------------                                
           .-+------------+---.                               
           #+----------- .##---                               
          -+-----------#+###---.                              
        ---------------####+---.                              
       -----------------+++----.                              
       ------------------------.                      .       
        -----------------------.                     .+.      
     ..  +--------------+++----.                  .--++- .    
    .----.-++++++++++++++-------    ..----        ++++++++    
   .----------------+---++--------------+-.       .-+--+++.   
    .----------------....-----------------.        ...-+++-   
      .--------...........---------------         ....-+-++.  
        -------.............+----------.          .......+-.  
          -+++...............----++-.             .......-.   
            .-...............-------               ......-    
             .................-------                .--.     
             ..................------.                +-.     
             ..................------+               ---.     
             ..................-------.             ----.     
              -................-------+           .-----      
              -................-------+-        -------       
            -----..............------++++++-----------.       
           --------...........---------++------------.        
          .--------+-........----------+----------..          
           -------+++++--...+----------------.....            
            ------++++.     +----------........               
        .-----++++++++.     .---+++++-                        
      - ..-------+++++-     ----------.                       
       ---.---------.       .-.--.-..-.                       
                              .---.-.                         
                                                              
            )";
		cout << "\033[0m" << endl;
	}
	void WildShowText() override
	{
		Wild_Charmander_text();
	}
	void Player_Charmander_text()
	{
		cout << "\033[1;31m";
		cout << R"(
                  ......                                      
               .----------.                                   
             ---------------.                                 
            .-----------------                                
           .-+------------+---.                               
           #+----------- .##---                               
          -+-----------#+###---.                              
        ---------------####+---.                              
       -----------------+++----.                              
       ------------------------.                      .       
        -----------------------.                     .+.      
     ..  +--------------+++----.                  .--++- .    
    .----.-++++++++++++++-------    ..----        ++++++++    
   .----------------+---++--------------+-.       .-+--+++.   
    .----------------....-----------------.        ...-+++-   
      .--------...........---------------         ....-+-++.  
        -------.............+----------.          .......+-.  
          -+++...............----++-.             .......-.   
            .-...............-------               ......-    
             .................-------                .--.     
             ..................------.                +-.     
             ..................------+               ---.     
             ..................-------.             ----.     
              -................-------+           .-----      
              -................-------+-        -------       
            -----..............------++++++-----------.       
           --------...........---------++------------.        
          .--------+-........----------+----------..          
           -------+++++--...+----------------.....            
            ------++++.     +----------........               
        .-----++++++++.     .---+++++-                        
      - ..-------+++++-     ----------.                       
       ---.---------.       .-.--.-..-.                       
                              .---.-.                         
)";
		cout << "\033[0m" << endl;
	}
	void PlayerShowText() override
	{
		Player_Charmander_text();
	}
};

class Squirtle : public Pokemon
{
public:
	Squirtle(int level)
	{
		Pokemon_Name = "꼬부기";
		Type = "water";
		Pokemon_Level = level;
		//=======================
        baseHp = 50;  // 체력 상향
        baseAtk = 48;
        baseDef = 65;
        hpGrowth = 1.1f;
        atkGrowth = 1.05f;  // 공격 성장률 조정
        defGrowth = 1.15f;  // 방어 성장률 조정
		//========================
		MaxHp = CalculateStat(baseHp, level, hpGrowth);
		CurrentHp = MaxHp;
		Atk = baseAtk + CalculateStat(baseAtk, level, atkGrowth);
		Def = baseDef + CalculateStat(baseDef, level, defGrowth);
		//            skillname, skilltype, power, accuracy, maxpp, description
		AddSkill(Skill("몸통박치기", "normal", 40, 100, 35, "상대에게 몸을 부딪칩니다."));
		AddSkill(Skill("물대포", "water", 40, 100, 25, "물을 발사하여 공격합니다."));
		AddSkill(Skill("파도타기", "water", 75, 90, 15, "커다란 파도로 공격합니다."));
		AddSkill(Skill("하이드로펌프", "water", 110, 80, 5, "강력한 물줄기로 공격합니다."));
	}
	void Wild_Squirtle_text()
	{
		cout << "\033[1;36m";
		cout << R"(
                  #+----------++                              
               #+-.....----------++                           
              +--...---------------+                          
             ++-------------.-+-----+#                        
            #+------------#+.-++-----+#                       
            #++----------+####+-------+                       
            ++-----------+###+--------+#                      
           +--------------------------+#                      
          ++--------------------------+#                      
           +-+--+------+++++--+++----++                       
            +-----------------------++                        
             ++--------------------+--#                       
               #++---------------++--+-+#                     
          #+----------++----+++-+--+++--++                    
      #++-------...------------.-----++++++                   
  ++++-..-------.....-------+...------++-++#                  
 #------------....+-.....--+----------++---+                  
  #-+--------........--..--------------++--++                 
 +----------+............-+-++----------+----                 
  ###+++++++--..........------------+-.------                 
           +.-.......-..---------+++-.------+                 
           +--+..--.--.....--+++-----.-+---++     ##+-++#     
           ++-......-+-------------+-.-++-++#  ++--------++   
           +--......--........----------++++# +------------+  
         ++---......--......-----------++++##+--------------+ 
        ++...---....--....--------------+++++-----++++-+----+ 
        +-...---------------------------+++------+----------+ 
        +..------+-----------------------+-------+----------+ 
        +----------++-----------..----------------+--------+  
       #+---------+#    ####++---------------------++----+#   
      #++---------+           -----------+##+++------++#      
       #+++-+++++             #+---------+      ###           
          ##                   ----------+#                   
                               ++++--+++++#
)";
		cout << "\033[0m" << endl;
	}
	void WildShowText() override
	{
		Wild_Squirtle_text();
	}
	void Player_Squirtle_text()
	{
		cout << "\033[1;36m";
		cout << R"(
                        
                        
                        
                        
                        
                        
                        
                        
)";
		cout << "\033[0m" << endl;
	}
	void PlayerShowText() override
	{
		Player_Squirtle_text();
	}
};

class Eevee : public Pokemon
{
public:
	Eevee(int level)
	{
		Pokemon_Name = "이브이";
		Type = "normal";
		Pokemon_Level = level;
		//=======================
        baseHp = 55;
        baseAtk = 55;
        baseDef = 50;
        hpGrowth = 1.1f;
        atkGrowth = 1.1f;
        defGrowth = 1.05f;  // 방어 성장률 조정
		//========================
		MaxHp = CalculateStat(baseHp, level, hpGrowth);
		CurrentHp = MaxHp;
		Atk = baseAtk + CalculateStat(baseAtk, level, atkGrowth);
		Def = baseDef + CalculateStat(baseDef, level, defGrowth);
		//            skillname, skilltype, power, accuracy, maxpp, description
		AddSkill(Skill("몸통박치기", "normal", 40, 100, 35, "상대에게 몸을 부딪칩니다."));
		AddSkill(Skill("모래뿌리기", "ground", 0, 100, 15, "모래를 뿌려 상대의 명중률을 떨어뜨립니다."));
		AddSkill(Skill("스피드스타", "normal", 60, 100, 20, "빠른 속도로 별 모양의 광선을 발사합니다."));
        AddSkill(Skill("마지막 승부", "normal", 130, 75, 10, "모든 힘을 다해 공격합니다."));
	}
	void Wild_Eevee_text()
	{
		cout << "\033[38;5;130m";
		cout << R"(
      #++                                                     
      ++-+                                                    
      +##-+                                                   
     #+##+++                                                  
     #+###+++                                                 
      +#++++++                                                
      +++++++-#                                               
      #+##+##++        #                    +++++--+          
       ++#####- ++--+#--+            ++++++--++#+++#          
        ++####-#---------++#+     +---+##+++###+++            
         ++###++-------------+  +-+#####++++#+++      #       
          #+++----------------+++#######++#++++     #--+      
            +------------------+########+++++      --..-+     
           ++--++---------------++++++++++    #+--.....--     
           +-+#+#----------+----+#     #++++----..--...-+     
           +-+###--------++++---+   ##+++++++++-+++-...--     
           +-++#+-------+####--+#  #+++++++++++++++-...--     
        ++-+------------+###+-++  #++++++++++++++++-...++     
       -...-+------------+++-----++++++++++++++++++----+      
      +......-+----------------..--+++++++++++++++++++++      
      -.......---++-------+--------+++++++++++++++++++#       
      -............-----------------+++++++++++++++++#        
      #-...-...........-----------++-+++++++++++++++#         
        +--.............----------+---++++++++++++#           
         ++-..-.........---------+-----+#+++#####             
           +---.........---------------+                      
            ++------...----+++-++------+                      
             ++++-.--------++++#+------+                      
             #+--++++------++++#++----++                      
              ++---++-----+#+++# -----+#                      
              ++----+-----++++  +----++                       
              ++---------++++  ------+                        
              ++--------+#     ++++++                         
                ##+++++++                                                        
            )";
		cout << "\033[0m" << endl;
	}
	void WildShowText() override
	{
		Wild_Eevee_text();
	}
	void Player_Eevee_text()
	{
		cout << "\033[38;5;130m";
		cout << R"(
      #++                                                     
      ++-+                                                    
      +##-+                                                   
     #+##+++                                                  
     #+###+++                                                 
      +#++++++                                                
      +++++++-#                                               
      #+##+##++        #                    +++++--+          
       ++#####- ++--+#--+            ++++++--++#+++#          
        ++####-#---------++#+     +---+##+++###+++            
         ++###++-------------+  +-+#####++++#+++      #       
          #+++----------------+++#######++#++++     #--+      
            +------------------+########+++++      --..-+     
           ++--++---------------++++++++++    #+--.....--     
           +-+#+#----------+----+#     #++++----..--...-+     
           +-+###--------++++---+   ##+++++++++-+++-...--     
           +-++#+-------+####--+#  #+++++++++++++++-...--     
        ++-+------------+###+-++  #++++++++++++++++-...++     
       -...-+------------+++-----++++++++++++++++++----+      
      +......-+----------------..--+++++++++++++++++++++      
      -.......---++-------+--------+++++++++++++++++++#       
      -............-----------------+++++++++++++++++#        
      #-...-...........-----------++-+++++++++++++++#         
        +--.............----------+---++++++++++++#           
         ++-..-.........---------+-----+#+++#####             
           +---.........---------------+                      
            ++------...----+++-++------+                      
             ++++-.--------++++#+------+                      
             #+--++++------++++#++----++                      
              ++---++-----+#+++# -----+#                      
              ++----+-----++++  +----++                       
              ++---------++++  ------+                        
              ++--------+#     ++++++                         
                ##+++++++                                     
)";
		cout << "\033[0m" << endl;
	}
	void PlayerShowText() override
	{
		Player_Eevee_text();
	}
};

class Lapras : public Pokemon
{
public:
	Lapras(int level)
	{
		Pokemon_Name = "라프라스";
		Type = "ice";  // 얼음 타입
		Pokemon_Level = level;
		//=======================
        baseHp = 90;  // 체력 하향 조정
        baseAtk = 80;  // 공격력 하향 조정
        baseDef = 80;
        hpGrowth = 1.15f;  // 체력 성장률 하향 조정
        atkGrowth = 1.1f;
        defGrowth = 1.1f;
		//========================
		MaxHp = CalculateStat(baseHp, level, hpGrowth);
		CurrentHp = MaxHp;
		Atk = baseAtk + CalculateStat(baseAtk, level, atkGrowth);
		Def = baseDef + CalculateStat(baseDef, level, defGrowth);
		//            skillname, skilltype, power, accuracy, maxpp, description
        AddSkill(Skill("얼음조각", "ice", 40, 100, 30, "날카로운 얼음 조각으로 공격합니다."));
        AddSkill(Skill("오로라빔", "ice", 75, 95, 20, "오로라의 빛으로 공격합니다."));  // 위력 강화
        AddSkill(Skill("얼음빔", "ice", 95, 85, 10, "냉기의 빔을 발사하여 공격합니다."));  // 위력 강화
        AddSkill(Skill("하이드로펌프", "water", 110, 80, 5, "강력한 물줄기로 공격합니다."));  // 명중률 강화
    }
	void Wild_Lapras_text()
	{
		cout << "\033[1;96m";  // 밝은 청록색/하늘색
		cout << R"(
                        #***#                                 
                       ++=+++*% ++++**                        
                    **#*++++++*=---==++                       
                    ++++==-===++==++==++                      
                    #*=========++++++++*                      
                   +============++++++*                       
                  +========+*++++++*%                         
                  ========-=++++++++                          
                  ++++=====++==-=*##                          
                      *=------=++++                           
                          #+++++++%                           
                          -=++++**                            
                         =--+++++                             
                        +-:====+*                             
                       +-:-====+@  ++*%                       
                      =::-====++**+=---                       
                     +-:==+=::=*+==-==+                       
                    =-:=++--=+------===*%%++#                 
                   ---=+=+=--==-----===--==+*                 
                  =--===---====-----------===*                
                 =--=-===-------------==---==+*%              
                ===--+=-==------==----===--=-=+++*#           
               **+++--====--------==---=======+++*            
               *+==------------=--=======+++++++*#            
               **+=----===+==--===========+=++++*#            
        @#+++++++===++++++=++=============++=+++*#++++#%      
     #==================+++++++========++++++++++*+++===++%   
   *=--------========+=+++++++=+++=++++++++++++**+++++++==++*%
  +----------======++==++++*++++++++=++=++**+*++**+***+++++++#
 +------------====+ *+==++======++++++++**++++++++++++++*#    
*--=-------=++*%     *+----=======+*+++++++++++*+=+++++++++#  
*****               *+-----=====+++++++===+++++*#*+*******+#  
                    =-=+++++++++++*     *+++++++##     
            )";
		cout << "\033[0m" << endl;
	}
	void WildShowText() override
	{
		Wild_Lapras_text();
	}
	void Player_Lapras_text()
	{
		cout << "\033[1;96m";  // 밝은 청록색/하늘색
		cout << R"(
                        #***#                                 
                       ++=+++*% ++++**                        
                    **#*++++++*=---==++                       
                    ++++==-===++==++==++                      
                    #*=========++++++++*                      
                   +============++++++*                       
                  +========+*++++++*%                         
                  ========-=++++++++                          
                  ++++=====++==-=*##                          
                      *=------=++++                           
                          #+++++++%                           
                          -=++++**                            
                         =--+++++                             
                        +-:====+*                             
                       +-:-====+@  ++*%                       
                      =::-====++**+=---                       
                     +-:==+=::=*+==-==+                       
                    =-:=++--=+------===*%%++#                 
                   ---=+=+=--==-----===--==+*                 
                  =--===---====-----------===*                
                 =--=-===-------------==---==+*%              
                ===--+=-==------==----===--=-=+++*#           
               **+++--====--------==---=======+++*            
               *+==------------=--=======+++++++*#            
               **+=----===+==--===========+=++++*#            
        @#+++++++===++++++=++=============++=+++*#++++#%      
     #==================+++++++========++++++++++*+++===++%   
   *=--------========+=+++++++=+++=++++++++++++**+++++++==++*%
  +----------======++==++++*++++++++=++=++**+*++**+***+++++++#
 +------------====+ *+==++======++++++++**++++++++++++++*#    
*--=-------=++*%     *+----=======+*+++++++++++*+=+++++++++#  
*****               *+-----=====+++++++===+++++*#*+*******+#  
                    =-=+++++++++++*     *+++++++##     
)";
		cout << "\033[0m" << endl;
	}
	void PlayerShowText() override
	{
		Player_Lapras_text();
	}
};

class Lucario : public Pokemon
{
public:
	Lucario(int level)
	{
		Pokemon_Name = "루카리오";
		Type = "fighting";
		Pokemon_Level = level;
		//=======================
        baseHp = 70;
        baseAtk = 95;  // 공격력 하향 조정
        baseDef = 70;
        hpGrowth = 1.1f;
        atkGrowth = 1.2f;  // 공격 성장률 하향 조정
        defGrowth = 1.1f;
		//========================
		MaxHp = CalculateStat(baseHp, level, hpGrowth);
		CurrentHp = MaxHp;
		Atk = baseAtk + CalculateStat(baseAtk, level, atkGrowth);
		Def = baseDef + CalculateStat(baseDef, level, defGrowth);
		//            skillname, skilltype, power, accuracy, maxpp, description
        AddSkill(Skill("파워-업 펀치", "fighting", 50, 100, 20, "주먹을 강하게 쥐어 공격합니다. 사용할수록 공격력이 올라갑니다."));  // 위력 강화
        AddSkill(Skill("본 러시", "ground", 65, 95, 10, "뼈다귀를 연속으로 휘둘러 공격합니다."));  // 위력 및 이름 강화
        AddSkill(Skill("파동탄", "fighting", 85, 85, 15, "강력한 파동의 에너지를 쏘아 공격합니다."));  // 위력 강화
        AddSkill(Skill("아우라 스피어", "fighting", 90, 100, 10, "아우라의 힘으로 구체를 만들어 공격합니다. 절대 빗나가지 않습니다."));
	}
	void Wild_Lucario_text()
	{
		cout << "\033[1;34m";  // 파란색
		cout << R"(
                              %=%                                    
                              +=+%                                   
                     +=#      ===*@                                  
                      +==+#   ++=**#                                 
                       +===*% +#%**#                                 
                        *%+***+**%**#                                
                         #*=+*==**###%%                              
                         *=*++=*#%####%%%@                           
                         @#+**##-#####%%%%%%@                        
                         ***#######**%########%                      
                        ####*******# %####*****%                     
                         %%%%%**#**=# %***#****#                     
                        %**##+++++=+#@ %***####%                     
                         ##++::::*+###                               
                         @#*:.-:-*###++++**@      =.-                
                        #++%%++++###%  %#+===+**##---%               
                       *++  =:-:+           *===**+=-*#%             
                    #+==*  =::::*             #*#*******#            
                -.*%**==#*:::::::=                #****#%            
                =::-**+%**-::::-***#            #++*#%@              
                #--********+-******#+*         #****##@              
               *****+===******+++*=+++=#     %****#####%             
               %###+=======+++======++++# %#####%@   @%#%            
                 %@=======++========++++*####%                       
                  *=======++*=======+++++#                           
                  *=====++++*%======+++++*                           
                  @====++++*  %======++*%                            
                   %##%             ####%                            
                    ###              %#####                          
                   @***#              %****#                         
                   ****@               %****#                        
                  #****                 *****#                       
                 #****#                 %*****#                      
               %#*****%                  #*****#                     
            #+++*+**#                    %******@                    
            %%#####%                    *+*++****                    
                                        %###*####%                   
            )";
		cout << "\033[0m" << endl;
	}
	void WildShowText() override
	{
		Wild_Lucario_text();
	}
	void Player_Lucario_text()
	{
		cout << "\033[1;34m";  // 파란색
		cout << R"(
                              %=%                                    
                              +=+%                                   
                     +=#      ===*@                                  
                      +==+#   ++=**#                                 
                       +===*% +#%**#                                 
                        *%+***+**%**#                                
                         #*=+*==**###%%                              
                         *=*++=*#%####%%%@                           
                         @#+**##-#####%%%%%%@                        
                         ***#######**%########%                      
                        ####*******# %####*****%                     
                         %%%%%**#**=# %***#****#                     
                        %**##+++++=+#@ %***####%                     
                         ##++::::*+###                               
                         @#*:.-:-*###++++**@      =.-                
                        #++%%++++###%  %#+===+**##---%               
                       *++  =:-:+           *===**+=-*#%             
                    #+==*  =::::*             #*#*******#            
                -.*%**==#*:::::::=                #****#%            
                =::-**+%**-::::-***#            #++*#%@              
                #--********+-******#+*         #****##@              
               *****+===******+++*=+++=#     %****#####%             
               %###+=======+++======++++# %#####%@   @%#%            
                 %@=======++========++++*####%                       
                  *=======++*=======+++++#                           
                  *=====++++*%======+++++*                           
                  @====++++*  %======++*%                            
                   %##%             ####%                            
                    ###              %#####                          
                   @***#              %****#                         
                   ****@               %****#                        
                  #****                 *****#                       
                 #****#                 %*****#                      
               %#*****%                  #*****#                     
            #+++*+**#                    %******@                    
            %%#####%                    *+*++****                    
                                        %###*####%                   
)";
		cout << "\033[0m" << endl;
	}
	void PlayerShowText() override
	{
		Player_Lucario_text();
	}
};

class Arbok : public Pokemon
{
public:
	Arbok(int level)
	{
		Pokemon_Name = "아보크";
		Type = "poison";
		Pokemon_Level = level;
		//=======================
        baseHp = 60;
        baseAtk = 80;  // 공격력 하향 조정
        baseDef = 69;
        hpGrowth = 1.05f;  // 체력 성장률 조정
        atkGrowth = 1.15f;  // 공격 성장률 조정
        defGrowth = 1.05f;  // 방어 성장률 조정
		//========================
		MaxHp = CalculateStat(baseHp, level, hpGrowth);
		CurrentHp = MaxHp;
		Atk = baseAtk + CalculateStat(baseAtk, level, atkGrowth);
		Def = baseDef + CalculateStat(baseDef, level, defGrowth);
		//            skillname, skilltype, power, accuracy, maxpp, description
        AddSkill(Skill("물기", "normal", 60, 100, 25, "날카로운 이빨로 상대를 물어 공격합니다."));
        AddSkill(Skill("독침", "poison", 40, 100, 30, "독이 있는 침으로 상대를 공격합니다."));
        AddSkill(Skill("용해액", "poison", 70, 90, 20, "강한 산성 액체를 뿜어 공격합니다."));  // 위력 강화
        AddSkill(Skill("독폭탄", "poison", 95, 80, 10, "독으로 된 폭탄을 던져 공격합니다."));  // 위력 강화
	}
	void Wild_Arbok_text()
	{
		cout << "\033[1;35m";  // 보라색
		cout << R"(
                             %#+====+*%@                        
                         #+-------==++++++#@                    
                       %-:--------==++++++++*%                  
                     %=::--------=+++++++++===+*@               
                  %===----------+++++*+++++++++===*@            
                 +--=--------==-++++%*++++++++++++==+%          
                *-=#--------=#=++*+*%+++++++++++++++==*@        
               @==+#------==++*#+*###+++##%#*+++##*+*+=+%       
               #-+++*+=++++*+**+*+##*%###+++#%#%*#%++++==@      
               %=+++##*+*#*+***+###%#%*+*%###++++#%++++*=-#     
                ++++#%**+**+**+*###%+*###*+*+==*+%#+++++*--#    
                %=*+*=#*++#***%*+%#+#%#+#=====*+##*++++++=-+    
                 #=*:*%%++=+++%%===+#*++*====*+*##+++++++*==@   
                  %=**+*%#++++%+===+#*+++#-=++###+#++++++#=-#   
                   @+*+%++####+==+==%%*++++*%##+*##++++++#==@   
                     *=+#%#****%###+=+*%%%%#*=*%##*+++++*+=*    
                      %+=*##############**##%####*++++++#==#    
                        +==%###################%+++++++*==#     
                         @+==*################*====+++==*@      
       @*%                @+=---######*****========+==+@        
       #+==*@              +-----**=----===========+*           
        @*==*             #----:---------========#%             
        @+==%             +---:-=---------===+#                 
       @*==#             *---::--=+=------=+%                   
      #+=+%             #----:-=-----=+---**####*#@             
    %+**++             @=----:---------=****+++++++++*@         
   @+====+          #+++----:-----------=*++++++#*++++*#@       
   %+===+*+##%%##**++++=----:------------#++++*++++===+++%      
   @*+++====+++++*++++*=----------------=++*#*++=+++===+++#     
    @#*++++++++++*++++*=+-------------=*=====*======++==++%     
       @*+++*+++++*+++*+===*=-----=*+========*========++++#     
          @%##******#**#+===----=============*========+++#      
                         *==========================+*+*%       
                           #+==============++====+++##@         
                              %###*+=====**++*##%%              
            )";
		cout << "\033[0m" << endl;
	}
	void WildShowText() override
	{
		Wild_Arbok_text();
	}
	void Player_Arbok_text()
	{
		cout << "\033[1;35m";  // 보라색
		cout << R"(
                             %#+====+*%@                        
                         #+-------==++++++#@                    
                       %-:--------==++++++++*%                  
                     %=::--------=+++++++++===+*@               
                  %===----------+++++*+++++++++===*@            
                 +--=--------==-++++%*++++++++++++==+%          
                *-=#--------=#=++*+*%+++++++++++++++==*@        
               @==+#------==++*#+*###+++##%#*+++##*+*+=+%       
               #-+++*+=++++*+**+*+##*%###+++#%#%*#%++++==@      
               %=+++##*+*#*+***+###%#%*+*%###++++#%++++*=-#     
                ++++#%**+**+**+*###%+*###*+*+==*+%#+++++*--#    
                %=*+*=#*++#***%*+%#+#%#+#=====*+##*++++++=-+    
                 #=*:*%%++=+++%%===+#*++*====*+*##+++++++*==@   
                  %=**+*%#++++%+===+#*+++#-=++###+#++++++#=-#   
                   @+*+%++####+==+==%%*++++*%##+*##++++++#==@   
                     *=+#%#****%###+=+*%%%%#*=*%##*+++++*+=*    
                      %+=*##############**##%####*++++++#==#    
                        +==%###################%+++++++*==#     
                         @+==*################*====+++==*@      
       @*%                @+=---######*****========+==+@        
       #+==*@              +-----**=----===========+*           
        @*==*             #----:---------========#%             
        @+==%             +---:-=---------===+#                 
       @*==#             *---::--=+=------=+%                   
      #+=+%             #----:-=-----=+---**####*#@             
    %+**++             @=----:---------=****+++++++++*@         
   @+====+          #+++----:-----------=*++++++#*++++*#@       
   %+===+*+##%%##**++++=----:------------#++++*++++===+++%      
   @*+++====+++++*++++*=----------------=++*#*++=+++===+++#     
    @#*++++++++++*++++*=+-------------=*=====*======++==++%     
       @*+++*+++++*+++*+===*=-----=*+========*========++++#     
          @%##******#**#+===----=============*========+++#      
                         *==========================+*+*%       
                           #+==============++====+++##@         
                              %###*+=====**++*##%%              
                        
)";
		cout << "\033[0m" << endl;
	}
	void PlayerShowText() override
	{
		Player_Arbok_text();
	}
};

class Pidgeotto : public Pokemon
{
public:
	Pidgeotto(int level)
	{
		Pokemon_Name = "피죤투";
		Type = "flying";
		Pokemon_Level = level;
		//=======================
        baseHp = 63;
        baseAtk = 60;  // 공격력 하향 조정
        baseDef = 55;
        hpGrowth = 1.05f;  // 체력 성장률 조정
        atkGrowth = 1.1f;
        defGrowth = 1.05f;  // 방어 성장률 조정
		//========================
		MaxHp = CalculateStat(baseHp, level, hpGrowth);
		CurrentHp = MaxHp;
		Atk = baseAtk + CalculateStat(baseAtk, level, atkGrowth);
		Def = baseDef + CalculateStat(baseDef, level, defGrowth);
		//            skillname, skilltype, power, accuracy, maxpp, description
        AddSkill(Skill("돌풍", "flying", 40, 100, 35, "강한 바람을 일으켜 공격합니다.")); // 기술 변경
        AddSkill(Skill("날개치기", "flying", 60, 100, 35, "단단한 날개로 상대를 내려쳐 공격합니다."));
        AddSkill(Skill("에어슬래시", "flying", 75, 95, 15, "날카로운 공기로 베어 공격합니다.")); // 기술 변경
        AddSkill(Skill("폭풍", "flying", 110, 70, 10, "강력한 바람으로 상대를 공격합니다."));
	}
	void Wild_Pidgeotto_text()
	{
		cout << "\033[38;5;180m";  // 연한 갈색/베이지색
		cout << R"(
                                                 #-#                 
  @**%%                                         %=-+                 
 #::---=+=:-*%                                  %=--*                
   =:::::::--++-::=*#%                         #*+--+                
    *#*-::::-+-:--==*+++#%                     +-+--=#               
    #..::-+--:+-:---::--*+=+%                  +=====*               
     @+:::::::-==*=-::-----++=+#               *==+==+               
        %*-::::-=::-:-=+-::::++=#              *==++++               
        #:.::+--:-+=---:-------*=%             *+=*+++               
          +:::::---:::-===-----=+=*%           ++****%               
            #+::::--=::::------:=++-.:=%       *=****                
              #=++=--:-*=--:---:-*+*==-:::-=**#*****##++==+@         
               *-::::::=:::-------*=+%*=----::::-========-:::=#      
              ##+=#-:::::+=:::-::::++++===========+=+====-----::#    
            %#      #-::::--::---:::-++*%%#    *****+++%@@==#+*=-*   
                     #+.:::--==------::-++#    #**+=+%@@#=-:::=++#   
                          *+=-:-=::::--::-+++*#%*==+#@@::----+===-:= 
                           +-::---=+==-:::::=+==*++++#%+----:+===**# 
                             %-:::--+*+*+=::::+++*++++*%-:---:-%     
                                *===--=-===-:::+==+++++++:::.*       
                                 %*+*+-:-++=--:-=-::::::...:#        
                                    @+-#---:-:............:#         
                                    #++++:................-          
                                   %+++*:.................#          
                                   +==+-::...............=           
                                  %==++--:...............#           
                                  *==++:-:::............+            
                                 @++++::=+-::.........:#             
                                 #+*---+==++-..:.....=               
                                ##+-:-+=+-=-=::::::*@                
                          %#*+++++*--++#++++::=++*-+%                
                      %*+=+++++*+++#==####*%  #%#*#                  
                  %#+======+*++++*++*+%                              
               %+========++====++=+*=*                               
              %=---===*======*+===+=+%                               
                 %*#-----==**===++==*                                
                     #*==+*----+==+*                                 
            )";
		cout << "\033[0m" << endl;
	}
	void WildShowText() override
	{
		Wild_Pidgeotto_text();
	}
	void Player_Pidgeotto_text()
	{
		cout << "\033[38;5;180m";  // 연한 갈색/베이지색
		cout << R"(
                                                 #-#                 
  @**%%                                         %=-+                 
 #::---=+=:-*%                                  %=--*                
   =:::::::--++-::=*#%                         #*+--+                
    *#*-::::-+-:--==*+++#%                     +-+--=#               
    #..::-+--:+-:---::--*+=+%                  +=====*               
     @+:::::::-==*=-::-----++=+#               *==+==+               
        %*-::::-=::-:-=+-::::++=#              *==++++               
        #:.::+--:-+=---:-------*=%             *+=*+++               
          +:::::---:::-===-----=+=*%           ++****%               
            #+::::--=::::------:=++-.:=%       *=****                
              #=++=--:-*=--:---:-*+*==-:::-=**#*****##++==+@         
               *-::::::=:::-------*=+%*=----::::-========-:::=#      
              ##+=#-:::::+=:::-::::++++===========+=+====-----::#    
            %#      #-::::--::---:::-++*%%#    *****+++%@@==#+*=-*   
                     #+.:::--==------::-++#    #**+=+%@@#=-:::=++#   
                          *+=-:-=::::--::-+++*#%*==+#@@::----+===-:= 
                           +-::---=+==-:::::=+==*++++#%+----:+===**# 
                             %-:::--+*+*+=::::+++*++++*%-:---:-%     
                                *===--=-===-:::+==+++++++:::.*       
                                 %*+*+-:-++=--:-=-::::::...:#        
                                    @+-#---:-:............:#         
                                    #++++:................-          
                                   %+++*:.................#          
                                   +==+-::...............=           
                                  %==++--:...............#           
                                  *==++:-:::............+            
                                 @++++::=+-::.........:#             
                                 #+*---+==++-..:.....=               
                                ##+-:-+=+-=-=::::::*@                
                          %#*+++++*--++#++++::=++*-+%                
                      %*+=+++++*+++#==####*%  #%#*#                  
                  %#+======+*++++*++*+%                              
               %+========++====++=+*=*                               
              %=---===*======*+===+=+%                               
                 %*#-----==**===++==*                                
                     #*==+*----+==+*                                 
)";
		cout << "\033[0m" << endl;
	}
	void PlayerShowText() override
	{
		Player_Pidgeotto_text();
	}
};

class Mew : public Pokemon
{
public:
    Mew(int level)
    {
        Pokemon_Name = "뮤";
        Type = "psychic";
        Pokemon_Level = level;
        //=======================
        baseHp = 85; 
        baseAtk = 85; 
        baseDef = 85;  
        hpGrowth = 1.15f; 
        atkGrowth = 1.15f; 
        defGrowth = 1.15f;
        //========================
        MaxHp = CalculateStat(baseHp, level, hpGrowth);
        CurrentHp = MaxHp;
        Atk = baseAtk + CalculateStat(baseAtk, level, atkGrowth);
        Def = baseDef + CalculateStat(baseDef, level, defGrowth);
        //            skillname, skilltype, power, accuracy, maxpp, description
        AddSkill(Skill("염동력", "psychic", 60, 100, 25, "초능력으로 상대를 공격합니다."));  // 위력 강화
        AddSkill(Skill("사이코키네시스", "psychic", 100, 85, 10, "강력한 정신 에너지로 상대를 공격합니다."));  // 위력 강화
        AddSkill(Skill("메가톤펀치", "normal", 90, 85, 15, "강력한 펀치로 상대를 공격합니다."));  // 위력 강화
        AddSkill(Skill("파멸의빔", "psychic", 130, 90, 5, "강력한 빛의 광선을 발사합니다."));  // 초강력 기술 추가
    }
    void Wild_Mew_text()
    {
        cout << "\033[1;95m";  // 분홍색
        cout << R"(
                      %*=:=                                     
                    *:::::%                                     
                 *=::::::*                                      
               #-------=@                                       
             *=-------*  @%**+-::.:+                            
           %=----===*%+...:::::::::-*                           
         %==----..:::::....::::::::-#                           
       %+====-==.::::::::::::::::::::#                          
      #===+##  @-:::::::::::::--+-::::%                         
     +=+@       #:::::::::::-::*=#=:::+                         
   @+=%         -:-:---::::::-..+=*::=                          
  #=*           -:=.-**::::::::.=:::=   @#***+++**********+==+% 
 @=*            #::=:=+:::::::::--+%*++*%@                   @+*
 ++               +-:::::::::::=+==++=--=+*@                 %=*
#+                    #*-::::-+====-::::::::-               %=* 
*+@              @#++*%%%==---===-::-+@@@@*#              @+=#  
 #+=*#######**++*%    *:::--=+::::::::-#                @+=#    
       #%            %::*#    ::::::::::-%            @==#      
                              :::::::::::::+@      @#+*%        
                              :::::::::::::::+  %%++%           
                             *::::::::::::::::=++#@             
                            *:::::::::-::::::::#                
                            #:::::::::--:::::::=                
                            %::-:::::::=+-::---+@               
                            %=::+--------=*#**=-=               
                            %==++***+++*%    @=--=              
                            %====#            *---*             
                             #----#           #-:::#            
                             %-----#           =::::@           
                              *::::-#          *:::::           
                               +:::=*          *::.::=          
                                %*-=%          #::....%         
                                                -:::-.-         
                                                *:::.=-         
                                                 %*--*@         
            )";
        cout << "\033[0m" << endl;
    }
    void WildShowText() override
    {
        Wild_Mew_text();
    }
    void Player_Mew_text()
    {
        cout << "\033[1;95m";  // 분홍색
        cout << R"(
                      %*=:=                                     
                    *:::::%                                     
                 *=::::::*                                      
               #-------=@                                       
             *=-------*  @%**+-::.:+                            
           %=----===*%+...:::::::::-*                           
         %==----..:::::....::::::::-#                           
       %+====-==.::::::::::::::::::::#                          
      #===+##  @-:::::::::::::--+-::::%                         
     +=+@       #:::::::::::-::*=#=:::+                         
   @+=%         -:-:---::::::-..+=*::=                          
  #=*           -:=.-**::::::::.=:::=   @#***+++**********+==+% 
 @=*            #::=:=+:::::::::--+%*++*%@                   @+*
 ++               +-:::::::::::=+==++=--=+*@                 %=*
#+                    #*-::::-+====-::::::::-               %=* 
*+@              @#++*%%%==---===-::-+@@@@*#              @+=#  
 #+=*#######**++*%    *:::--=+::::::::-#                @+=#    
       #%            %::*#    ::::::::::-%            @==#      
                              :::::::::::::+@      @#+*%        
                              :::::::::::::::+  %%++%           
                             *::::::::::::::::=++#@             
                            *:::::::::-::::::::#                
                            #:::::::::--:::::::=                
                            %::-:::::::=+-::---+@               
                            %=::+--------=*#**=-=               
                            %==++***+++*%    @=--=              
                            %====#            *---*             
                             #----#           #-:::#            
                             %-----#           =::::@           
                              *::::-#          *:::::           
                               +:::=*          *::.::=          
                                %*-=%          #::....%         
                                                -:::-.-         
                                                *:::.=-         
                                                 %*--*@         
)";
        cout << "\033[0m" << endl;
    }
    void PlayerShowText() override
    {
        Player_Mew_text();
    }
};

class Butterfree : public Pokemon
{
public:
    Butterfree(int level)
    {
        Pokemon_Name = "버터플";
        Type = "bug";
        Pokemon_Level = level;
        //=======================
        baseHp = 60;
        baseAtk = 50;
        baseDef = 50;
        hpGrowth = 1.05f;  // 체력 성장률 조정
        atkGrowth = 1.05f;  // 공격 성장률 조정
        defGrowth = 1.05f;  // 방어 성장률 조정
        //========================
        MaxHp = CalculateStat(baseHp, level, hpGrowth);
        CurrentHp = MaxHp;
        Atk = baseAtk + CalculateStat(baseAtk, level, atkGrowth);
        Def = baseDef + CalculateStat(baseDef, level, defGrowth);
        //            skillname, skilltype, power, accuracy, maxpp, description
        AddSkill(Skill("벌레의 저항", "bug", 35, 100, 20, "벌레의 힘으로 상대를 공격합니다."));  // 위력 강화
        AddSkill(Skill("은빛바람", "bug", 65, 95, 15, "반짝이는 은빛 바람으로 상대를 공격합니다."));  // 위력 강화
        AddSkill(Skill("사이코키네시스", "psychic", 90, 85, 10, "강력한 정신 에너지로 상대를 공격합니다."));
        AddSkill(Skill("에어슬래시", "flying", 75, 90, 15, "날카로운 공기의 칼날로 공격합니다."));
    }

    void Wild_Butterfree_text()
    {
        cout << "\033[1;95m";  // 보라색 계열
        cout << R"( 
                                                                    
              %*@@                                                  
              @%@                %@@                +=.....+##%@    
              @@@              @##@@            #-..........*####@  
   %...=%     @@              @@@@           #:..........:=.:*+%@@@ 
  #......:*   @@             @@           %-..........--:-.......@@@
 @#........:@ @@            @@          @-.........=.--..........+@@
@%-.::.......*@@          @@          %-...=%#####%#.............@@@
%...::.:-:....=@         @@         @=..-#+:....-%@@@.......:---%@@@
#.....=##%#@:..@@       @@         #..:-.........:@@@:+-.........%@@
@=:...*#.....+.*-%      @         =..=...........-@%.............#@@
@....-+@......:-=-     @@       %:.-:...........=*:.............:@@ 
@+.....+%.......%.=    @       %..=...........=...............:%@@@ 
 @%---:..=.......=.+  @@@@    @:.+........:=:..:------:.....-@@@@@  
 @+......:==:....=*+++%#****#@-.=.......=.-=:................:@@@   
  %..........--.+=*++=***#=+#**+....:+=-......................@@@   
   +..........-**++++***#::==+**=.--.........................:@@    
    =........-:-=*******#====++*#............................#@@    
    @=....:-=+==++#******#+++++*#....::::::::::::::::......:@@@     
     %.......+=+++#**#+*#*#*+++**........................:#@@@@     
      +......=*+++#*=-=++#******...........................*@@      
       -......-**#**###******##+--:........................:@@      
       #........:*****************:::::==..................*@@      
        %...--.......********-=#**#--------:-=::.........:-@@       
         @#........:-********++*****-----------:::--=:::=@@@        
           =.......:*+***+***#*****-:+=-----------::.:@@@@@         
            @=:...:-=:*****+******+=::::=+=---------:%@@@@          
                 @@=:+:-*******#%***=:::::::+-=++*#@@@@             
                  %=:-:::=-#**% %****--:::::::+::=@@@               
                  %*:+:::=+****@%+++++::+==+-:::==@@@               
                  %##::=:::#+++*%+++++-:::::=::::+@@                
                   %#@:::::+===* #=--=%#:-::::::#@@@                
                    @@@@#=-**--=@ *---+ @@%##%@@@@                  
                      @@@@@@ *-=@  %--*    @@@                      
)";
        cout << "\033[0m" << endl;
    }

    void WildShowText() override
    {
        Wild_Butterfree_text();
    }

    void Player_Butterfree_text()
    {
        cout << "\033[1;95m";  // 보라색 계열
        // 여기에 아스키 아트 자리 (제거함)
        cout << "\033[0m" << endl;
    }

    void PlayerShowText() override
    {
        Player_Butterfree_text();
    }
};

class Onix : public Pokemon
{
public:
    Onix(int level)
    {
        Pokemon_Name = "롱스톤";
        Type = "rock";
        Pokemon_Level = level;
        //=======================
        baseHp = 45;  // 체력 상향 조정
        baseAtk = 45;
        baseDef = 130;  // 방어력 하향 조정
        hpGrowth = 1.0f;  // 체력 성장률 조정
        atkGrowth = 1.0f;
        defGrowth = 1.3f;  // 방어 성장률 하향 조정
        //========================
        MaxHp = CalculateStat(baseHp, level, hpGrowth);
        CurrentHp = MaxHp;
        Atk = baseAtk + CalculateStat(baseAtk, level, atkGrowth);
        Def = baseDef + CalculateStat(baseDef, level, defGrowth);
        //            skillname, skilltype, power, accuracy, maxpp, description
        AddSkill(Skill("돌떨구기", "rock", 50, 90, 15, "단단한 바위를 떨어뜨려 공격합니다."));
        AddSkill(Skill("락블래스트", "rock", 75, 85, 10, "여러 개의 바위를 발사하여 공격합니다."));
        AddSkill(Skill("지진", "ground", 100, 75, 10, "강력한 지진으로 공격합니다."));
        AddSkill(Skill("스톤엣지", "rock", 100, 80, 5, "날카로운 바위로 공격합니다."));  // 기술 강화
    }

    void Wild_Onix_text()
    {
        cout << "\033[1;90m";  // 회색
        cout << R"(
          *%                  *+------+@                            
         #=*              %+----=-----+=@ %*@                       
         #=+@            *:-----=========*----*@     @@@            
         +==@           *==------==========*====%##=====+*%@        
         ++=#    %=::------=+---+*+========+*==*#*++++*++++=+*@     
         ===* @+-:::::---------#***#+======++==#*#++++++++++++*     
         -==+%=---------------==+****#==+#**+==+##++++++*++++*=@    
         -+=+*-=------------++===*****#***####**##+=====+*+++*=*    
         -+=+=-=++++=*==+++======##****++*#****###+====+++++++++@   
        #-=+-++++*++++===========##**+++#*****#####*++++++++++##@   
      @+=-=+==*====*++++**======+*#**+#% @#@#+**#######*++++*##@    
     +--+==+=++=====+*+=======+#*+%         @*++******####+###*%@   
   @----+++*+===+==+==++=====**++%            @*+*******######***@  
   =+---==+=====+=======*#*****%                  @#***#######***%@ 
  %-=----=========+======*##**%                   #++**#######***#@ 
  +------========++======#%%@                     @#*****##%####*%  
  %*---=-+======+++======@                         %******######@   
 @+=.++:-+=+=+..+==++===+@                           @%#**#####@    
  %---=::+=***+===+++++#+                           @+=+**%#####@   
  #----::=+------=+****%                            +++++++######%  
 @+--=::-+-----=+##**@                           #+*=++**+++++###%  
  +--=::==----+=@@*%                           @+++#+++++++++####@  
   @=+--+====+#@%*#@                        %%%*****#+*#######**%   
     #+++@@@###**#@                       #+++#******#####****#     
       %+==+***@                         #++**##%***######@@        
                                     %+++*******%###*****#          
                                    #+++*#******##@@%%@             
                                    #*+**#%#####****                
                                   %#+***###%%%####                 
                                 @++#%%########                     
                                %+****###***#@                      
                                %+****%####                         
                                @****#####%                         
                                  @%**###*%                         
                                      %###*#%#*#%@ #+@              
                                        @%#%#####*####@             
                                            @%##**#%%@    
        )";
        cout << "\033[0m" << endl;
    }

    void WildShowText() override
    {
        Wild_Onix_text();
    }

    void Player_Onix_text()
    {
        cout << "\033[1;90m";  // 회색
        cout << R"(
          *%                  *+------+@                            
         #=*              %+----=-----+=@ %*@                       
         #=+@            *:-----=========*----*@     @@@            
         +==@           *==------==========*====%##=====+*%@        
         ++=#    %=::------=+---+*+========+*==*#*++++*++++=+*@     
         ===* @+-:::::---------#***#+======++==#*#++++++++++++*     
         -==+%=---------------==+****#==+#**+==+##++++++*++++*=@    
         -+=+*-=------------++===*****#***####**##+=====+*+++*=*    
         -+=+=-=++++=*==+++======##****++*#****###+====+++++++++@   
        #-=+-++++*++++===========##**+++#*****#####*++++++++++##@   
      @+=-=+==*====*++++**======+*#**+#% @#@#+**#######*++++*##@    
     +--+==+=++=====+*+=======+#*+%         @*++******####+###*%@   
   @----+++*+===+==+==++=====**++%            @*+*******######***@  
   =+---==+=====+=======*#*****%                  @#***#######***%@ 
  %-=----=========+======*##**%                   #++**#######***#@ 
  +------========++======#%%@                     @#*****##%####*%  
  %*---=-+======+++======@                         %******######@   
 @+=.++:-+=+=+..+==++===+@                           @%#**#####@    
  %---=::+=***+===+++++#+                           @+=+**%#####@   
  #----::=+------=+****%                            +++++++######%  
 @+--=::-+-----=+##**@                           #+*=++**+++++###%  
  +--=::==----+=@@*%                           @+++#+++++++++####@  
   @=+--+====+#@%*#@                        %%%*****#+*#######**%   
     #+++@@@###**#@                       #+++#******#####****#     
       %+==+***@                         #++**##%***######@@        
                                     %+++*******%###*****#          
                                    #+++*#******##@@%%@             
                                    #*+**#%#####****                
                                   %#+***###%%%####                 
                                 @++#%%########                     
                                %+****###***#@                      
                                %+****%####                         
                                @****#####%                         
                                  @%**###*%                         
                                      %###*#%#*#%@ #+@              
                                        @%#%#####*####@             
                                            @%##**#%%@    
        )";
        cout << "\033[0m" << endl;
    }

    void PlayerShowText() override
    {
        Player_Onix_text();
    }
};

class Gengar : public Pokemon
{
public:
    Gengar(int level)
    {
        Pokemon_Name = "팬텀";
        Type = "ghost";
        Pokemon_Level = level;
        //=======================
        baseHp = 60;
        baseAtk = 65;  // 공격력 하향 조정
        baseDef = 60;
        hpGrowth = 1.05f;  // 체력 성장률 조정
        atkGrowth = 1.2f;  // 공격 성장률 하향 조정
        defGrowth = 1.05f;  // 방어 성장률 조정
        //========================
        MaxHp = CalculateStat(baseHp, level, hpGrowth);
        CurrentHp = MaxHp;
        Atk = baseAtk + CalculateStat(baseAtk, level, atkGrowth);
        Def = baseDef + CalculateStat(baseDef, level, defGrowth);
        //            skillname, skilltype, power, accuracy, maxpp, description
        AddSkill(Skill("섀도볼", "ghost", 85, 90, 15, "그림자 덩어리를 발사하여 공격합니다."));  // 위력 강화
        AddSkill(Skill("기습", "ghost", 70, 100, 20, "상대의 허점을 노려 갑자기 공격합니다."));
        AddSkill(Skill("사이코키네시스", "psychic", 90, 85, 10, "강력한 정신 에너지로 상대를 공격합니다."));
        AddSkill(Skill("섀도클로", "ghost", 95, 80, 5, "그림자의 발톱으로 공격합니다."));  // 기술 강화
    }

    void Wild_Gengar_text()
    {
        cout << "\033[1;35m";  // 보라색
        cout << R"(
             #*@                                                    
             %+=*%                                                  
             %*+==*@                                                
             %**====*@                                              
             %***=====+@                                            
             @***+====++*@ @#@  @      @%#**%                       
             @****++++++*+#@**#%*@@%#******%                        
   @%@        #***************************%                         
 %%%**+#%     %*******++==========+++********#@                     
 @#****+==+%  @****+================++*******#************++++++*#@ 
  %****++====*@*#**+==================+++*******+===========++**#@  
   @#*****+++*%**++===================+++********++=====++****#@    
     #*****++****+===================++++********++++*******%@      
      #**********++++*===============+++******************%         
      @#***********+-==============++*******************%           
        %*********+::-*+==+====+++*******************#@             
        #*********=::-=******++***********#*******#*@               
       %+*****#****::-+**********++****+==********#@                
       #++****++****+===***********#======********#********++*%@    
      @*++****+.:****************+--::-==*********#************#%   
      @*+++***#..--#*************=----=************************%%   
      @*+++***#:.-...-#*************************************#**     
      @#+++*####=:....=..:=+****************************#%@         
       %****######:..::.......-..::.-..-********##*#%@@             
     @%%***#########-+.......-:.....:.*#########@                   
     %##%*##%%%%%%%####*-....=.....*###########@                    
    @#*#####%%%%%%%%%%%%%%%##%%#######%%%%%###@                     
     #***###%%%%%%%%%%%%%%%%%%#%%%%%%###%%%%%@                      
     %****####%%%%%%%%%%%%%%%%%%%##******#%%@                       
      @***###%##%%%%%%%%%%%%%%%%#********##%@                       
        @%#####%####%%%%%%%%%%%#*********###@                       
          %##%#@ @%######%%%%####***********%                       
           @%%      @%%%#######*************@                       
                      @%###%  @#****#*#****#                        
                        @%%@    #*##%%#@#*#                         
                                @*#######%                          
                                 @%###%@                            
        )";
        cout << "\033[0m" << endl;
    }

    void WildShowText() override
    {
        Wild_Gengar_text();
    }

    void Player_Gengar_text()
    {
        cout << "\033[1;35m";  // 보라색
        cout << R"(
             #*@                                                    
             %+=*%                                                  
             %*+==*@                                                
             %**====*@                                              
             %***=====+@                                            
             @***+====++*@ @#@  @      @%#**%                       
             @****++++++*+#@**#%*@@%#******%                        
   @%@        #***************************%                         
 %%%**+#%     %*******++==========+++********#@                     
 @#****+==+%  @****+================++*******#************++++++*#@ 
  %****++====*@*#**+==================+++*******+===========++**#@  
   @#*****+++*%**++===================+++********++=====++****#@    
     #*****++****+===================++++********++++*******%@      
      #**********++++*===============+++******************%         
      @#***********+-==============++*******************%           
        %*********+::-*+==+====+++*******************#@             
        #*********=::-=******++***********#*******#*@               
       %+*****#****::-+**********++****+==********#@                
       #++****++****+===***********#======********#********++*%@    
      @*++****+.:****************+--::-==*********#************#%   
      @*+++***#..--#*************=----=************************%%   
      @*+++***#:.-...-#*************************************#**     
      @#+++*####=:....=..:=+****************************#%@         
       %****######:..::.......-..::.-..-********##*#%@@             
     @%%***#########-+.......-:.....:.*#########@                   
     %##%*##%%%%%%%####*-....=.....*###########@                    
    @#*#####%%%%%%%%%%%%%%%##%%#######%%%%%###@                     
     #***###%%%%%%%%%%%%%%%%%%#%%%%%%###%%%%%@                      
     %****####%%%%%%%%%%%%%%%%%%%##******#%%@                       
      @***###%##%%%%%%%%%%%%%%%%#********##%@                       
        @%#####%####%%%%%%%%%%%#*********###@                       
          %##%#@ @%######%%%%####***********%                       
           @%%      @%%%#######*************@                       
                      @%###%  @#****#*#****#                        
                        @%%@    #*##%%#@#*#                         
                                @*#######%                          
                                 @%###%@                            
        )";
        cout << "\033[0m" << endl;
    }

    void PlayerShowText() override
    {
        Player_Gengar_text();
    }
};

class Dragonite : public Pokemon
{
public:
    Dragonite(int level)
    {
        Pokemon_Name = "망나뇽";
        Type = "dragon";  // 대표적인 타입 하나만 사용
        Pokemon_Level = level;
        //=======================
        baseHp = 85;  // 체력 하향 조정
        baseAtk = 110;  // 공격력 하향 조정
        baseDef = 90;  // 방어력 하향 조정
        hpGrowth = 1.15f;  // 체력 성장률 하향 조정
        atkGrowth = 1.25f;  // 공격 성장률 하향 조정
        defGrowth = 1.15f;  // 방어 성장률 하향 조정
        //========================
        MaxHp = CalculateStat(baseHp, level, hpGrowth);
        CurrentHp = MaxHp;
        Atk = baseAtk + CalculateStat(baseAtk, level, atkGrowth);
        Def = baseDef + CalculateStat(baseDef, level, defGrowth);
        //            skillname, skilltype, power, accuracy, maxpp, description
        AddSkill(Skill("용의분노", "dragon", 95, 85, 10, "드래곤의 분노를 담아 공격합니다."));  // 위력 강화
        AddSkill(Skill("역린", "dragon", 130, 75, 5, "폭발적인 분노로 상대를 공격합니다."));  // 위력 및 명중률 강화
        AddSkill(Skill("파괴광선", "normal", 150, 70, 5, "강력한 광선을 발사하여 공격합니다."));  // 명중률 강화
        AddSkill(Skill("용의파동", "dragon", 115, 85, 5, "강력한 드래곤 에너지로 공격합니다."));  // 강력한 기술 추가
    }

    void Wild_Dragonite_text()
    {
        cout << "\033[1;33m";  // 노란색/주황색
        cout << R"(
                                      =                             
           #                         @*                             
         *=#          #-+    #**%  %++%                             
         *@          #+-==++*    ##                                 
         #=%##+-##-#-:::-=+--+                                      
                   -----------+                                     
                  #------=+%--=           +=+%                      
                   +------+#=-=*          +#**=%                    
                   *:::------===%        #++++++=                   
                  #-::------+===*       @+++*++++=*                 
                  *+------=+===--@     #*+++*++++++*                
         *:*@*   ******++---=+---+    **++++++++++++%               
       @:=---+* %+*****:.:::+------ #**++++++++++++++%              
        *--------+****+:...:=------=***++++=*+++++++*#              
         *--------=+==......=---::--=#*##**+**#@   #**              
          %+----===+=:::.::.=---:::---%     %       ##              
              @#*#@-........---=--::---#            +#              
                  -.......-=----=-------+@                          
                 -..........------=------=@                         
                -.........::-------+------+               *=@       
               *............=------=+------*            %=-+        
              #+:......::==:------=--=----=*          #+===#        
             +-:............:=---------+-:%=       %*++++=*         
            *::=--.........:-+-=-:-------*     @#++++=+==*          
            =::=:.............:::::-------++++++++====++%           
            =-----::.......:::+-:::-------=+++++++===+*%            
            =----=....:::.....=------------+++++++=++*              
             +----=::-:...:=-:-------------+++==+++*@               
              #+===++--:::::---+=--------=+++++*+#                  
                %++++=++++++=====*==-==-==+=+=#                     
             #+++++++==+% #**+====+======+*@                        
          %=-:::--===+*          @@ =====*                          
         #=::=-----=#              *=--===+                         
            %%%                   %--------*                        
                                  #-----=--=%                       
                                   %-:=--==:%                       
                                     *%#:= *                        
        )";
        cout << "\033[0m" << endl;
    }

    void WildShowText() override
    {
        Wild_Dragonite_text();
    }

    void Player_Dragonite_text()
    {
        cout << "\033[1;33m";  // 노란색/주황색
        cout << R"(
                                      =                             
           #                         @*                             
         *=#          #-+    #**%  %++%                             
         *@          #+-==++*    ##                                 
         #=%##+-##-#-:::-=+--+                                      
                   -----------+                                     
                  #------=+%--=           +=+%                      
                   +------+#=-=*          +#**=%                    
                   *:::------===%        #++++++=                   
                  #-::------+===*       @+++*++++=*                 
                  *+------=+===--@     #*+++*++++++*                
         *:*@*   ******++---=+---+    **++++++++++++%               
       @:=---+* %+*****:.:::+------ #**++++++++++++++%              
        *--------+****+:...:=------=***++++=*+++++++*#              
         *--------=+==......=---::--=#*##**+**#@   #**              
          %+----===+=:::.::.=---:::---%     %       ##              
              @#*#@-........---=--::---#            +#              
                  -.......-=----=-------+@                          
                 -..........------=------=@                         
                -.........::-------+------+               *=@       
               *............=------=+------*            %=-+        
              #+:......::==:------=--=----=*          #+===#        
             +-:............:=---------+-:%=       %*++++=*         
            *::=--.........:-+-=-:-------*     @#++++=+==*          
            =::=:.............:::::-------++++++++====++%           
            =-----::.......:::+-:::-------=+++++++===+*%            
            =----=....:::.....=------------+++++++=++*              
             +----=::-:...:=-:-------------+++==+++*@               
              #+===++--:::::---+=--------=+++++*+#                  
                %++++=++++++=====*==-==-==+=+=#                     
             #+++++++==+% #**+====+======+*@                        
          %=-:::--===+*          @@ =====*                          
         #=::=-----=#              *=--===+                         
            %%%                   %--------*                        
                                  #-----=--=%                       
                                   %-:=--==:%                       
                                     *%#:= *                        
        )";
        cout << "\033[0m" << endl;
    }

    void PlayerShowText() override
    {
        Player_Dragonite_text();
    }
};

class Metagross : public Pokemon
{
public:
    Metagross(int level)
    {
        Pokemon_Name = "메타그로스";
        Type = "steel";  // 대표적인 타입 하나만 사용
        Pokemon_Level = level;
        //=======================
        baseHp = 75;  // 체력 하향 조정
        baseAtk = 110;  // 공격력 하향 조정
        baseDef = 110;  // 방어력 하향 조정
        hpGrowth = 1.1f;  // 체력 성장률 조정
        atkGrowth = 1.2f;  // 공격 성장률 하향 조정
        defGrowth = 1.2f;  // 방어 성장률 하향 조정
        //========================
        MaxHp = CalculateStat(baseHp, level, hpGrowth);
        CurrentHp = MaxHp;
        Atk = baseAtk + CalculateStat(baseAtk, level, atkGrowth);
        Def = baseDef + CalculateStat(baseDef, level, defGrowth);
        //            skillname, skilltype, power, accuracy, maxpp, description
        AddSkill(Skill("메탈크로우", "steel", 75, 90, 15, "날카로운 강철 발톱으로 공격합니다."));  // 위력 강화
        AddSkill(Skill("코멧펀치", "steel", 95, 85, 10, "유성처럼 빠른 펀치로 공격합니다."));  // 위력 강화
        AddSkill(Skill("사이코키네시스", "psychic", 90, 85, 10, "강력한 정신 에너지로 상대를 공격합니다."));
        AddSkill(Skill("메테오충격", "steel", 120, 80, 5, "운석의 충격으로 상대를 공격합니다."));  // 강력한 기술 추가
    }

    void Wild_Metagross_text()
    {
        cout << "\033[1;36m";  // 청록색/파란색
        cout << R"(
                                                     @%#%           
                                                  *+#######+++*%    
                                                ##*++*+++****####%  
                                               %#++++###*########## 
          @***%                                 **##**+++++++**##+*%
      #*+*##+==+=*                             %**++++++++++++++++*#
    *--=++*#**+***++                          %%**+++++++++--***+**#
 %+=+++++****+**+**++                           +=====+**###**#####*
*+*#######*++#++**#+*+#                         %--+====#+++++++****
 *++####*+++*++++#####**                         #===+====#+++*****#
 +-=**##*++*++++######%#*                         %+===++==*+++**** 
 *=*++*#*+*++++#####%####%                   *+-#  +=+=########***% 
 %++###****+++*####%######% -=           *=::=%     *=+########**%  
  %++*#*+#+++*#############* +:-@ #=-=+-::**#**%   %+=*########*%   
    #*=*##****###%#############:::==-::=%%+==#*##+=*%%%**###*+#     
       %*+++++*#****#%#%#*####=%*::::=#%#%*=+**+**#%####*#          
                            #==+:::=:::-*+****+#@%+:=*%%%           
                          #+===::++==+--=+**+++++**=:-*#            
                         #=-=---*#****#%#++++++##**++**#            
                         %+**+*%%*::-***#**+++#*%#++##@             
                           @*##**::::=**+++******#%%%%%**#          
                 @#*#%%      ##*::-=+**######%%%%#***+=-===#@       
        +*===+**+**********#*##:-+#%%%           %%+----====#%      
     #****++**++*********++*#%+#                 *======+***###     
    #++++*++++***+++#++**++*%                   +=======-++***##    
  #+++++++*++++**++++***###%                   +=======:++++***##   
   #**#*+++*++++**++++#####                   #======-+*######+**   
   #*+++++++*++++**+*#*##*                   #======::++++*##*+**   
 %*++++++++++#*+++*###%#%                    #=====:::++++++*++*%   
@+++++++++##+++*++####@                      %+===++-#*+++++***#    
 %*+++++**+++++%*###%                          +:=++*####***+*#     
       #*++**#***#%                            %=#***##**++*#       
                                                 %@@%%%%%           
        )";
        cout << "\033[0m" << endl;
    }

    void WildShowText() override
    {
        Wild_Metagross_text();
    }

    void Player_Metagross_text()
    {
        cout << "\033[1;36m";  // 청록색/파란색
        cout << R"(
                                                     @%#%           
                                                  *+#######+++*%    
                                                ##*++*+++****####%  
                                               %#++++###*########## 
          @***%                                 **##**+++++++**##+*%
      #*+*##+==+=*                             %**++++++++++++++++*#
    *--=++*#**+***++                          %%**+++++++++--***+**#
 %+=+++++****+**+**++                           +=====+**###**#####*
*+*#######*++#++**#+*+#                         %--+====#+++++++****
 *++####*+++*++++#####**                         #===+====#+++*****#
 +-=**##*++*++++######%#*                         %+===++==*+++**** 
 *=*++*#*+*++++#####%####%                   *+-#  +=+=########***% 
 %++###****+++*####%######% -=           *=::=%     *=+########**%  
  %++*#*+#+++*#############* +:-@ #=-=+-::**#**%   %+=*########*%   
    #*=*##****###%#############:::==-::=%%+==#*##+=*%%%**###*+#     
       %*+++++*#****#%#%#*####=%*::::=#%#%*=+**+**#%####*#          
                            #==+:::=:::-*+****+#@%+:=*%%%           
                          #+===::++==+--=+**+++++**=:-*#            
                         #=-=---*#****#%#++++++##**++**#            
                         %+**+*%%*::-***#**+++#*%#++##@             
                           @*##**::::=**+++******#%%%%%**#          
                 @#*#%%      ##*::-=+**######%%%%#***+=-===#@       
        +*===+**+**********#*##:-+#%%%           %%+----====#%      
     #****++**++*********++*#%+#                 *======+***###     
    #++++*++++***+++#++**++*%                   +=======-++***##    
  #+++++++*++++**++++***###%                   +=======:++++***##   
   #**#*+++*++++**++++#####                   #======-+*######+**   
   #*+++++++*++++**+*#*##*                   #======::++++*##*+**   
 %*++++++++++#*+++*###%#%                    #=====:::++++++*++*%   
@+++++++++##+++*++####@                      %+===++-#*+++++***#    
 %*+++++**+++++%*###%                          +:=++*####***+*#     
       #*++**#***#%                            %=#***##**++*#       
                                                 %@@%%%%%           
        )";
        cout << "\033[0m" << endl;
    }

    void PlayerShowText() override
    {
        Player_Metagross_text();
    }
};